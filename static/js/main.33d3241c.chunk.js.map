{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","formControl","margin","spacing","minWidth","backgroundColor","header","textAlign","color","text","total","botao","marginLeft","paper","padding","palette","secondary","maxWidth","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","green","App","classes","useState","data","setData","dataFUll","setDataFull","OpenLink","link","window","open","React","estados","estado","setEstado","setOpen","handleChange","event","a","target","value","dataupdate","map","i","push","length","useEffect","Tabletop","init","key","simpleSheet","then","splice","index","retorno","cidade","split","PalavraDepoisUltimaVirgula","trim","estrangeira","catch","err","console","log","className","Typography","variant","FormControl","Select","labelId","id","onClose","onOpen","onChange","MenuItem","label","Button","onClick","VerEstrangeiras","startIcon","CssBaseline","Container","fixed","Grid","container","itemm","item","Card","CardHeader","title","subheader","nome","CardContent","if","wpp","substring","telefone","url","replace","OpenWpp","style","component","sobre","href","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.33d3241c.chunk.js","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nimport Tabletop from \"tabletop\";\nimport RcIf, { RcElse } from 'rc-if';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport { green } from '@material-ui/core/colors';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    backgroundColor: 'white'\n  },\n\n  header: {\n    textAlign: 'center',\n    backgroundColor: '#808080',\n    color: 'white',\n  },\n\n  text: {\n    margin: theme.spacing(1),\n    textAlign: 'left',\n  },\n  total: {\n    margin: theme.spacing(1),\n    textAlign: 'center',\n  },\n\n  botao: {\n    marginLeft: theme.spacing(5),\n    color: 'white',\n  },\n\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    maxWidth: 345,\n    margin: 10,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: green[500],\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  const [data, setData] = useState([]);\n  const [dataFUll, setDataFull] = useState([]);\n\n\n  const OpenWpp = (telefone, estrangeira) => {\n    // separa strings por 'e' CASO TENHA MAIS DE UM TELEFONE NA STRING\n    var retorno = telefone.split(\"e\");\n    telefone = retorno[0]\n    // remover caracteres e espaÃ§o de string telefone\n    telefone = telefone.replace(/[^\\d]+/g, '')\n    //montar url\n    var url;\n    if (estrangeira === false) {\n      // 55 do brasil\n      url = \"https://api.whatsapp.com/send?phone=55\" + telefone + \"&text=Oi%2C%20quero%20saber%20mais%20sobre%20a%20escola%20de%20jesus%20EX\"\n    } else {\n      // sem 55 estrangeira\n      url = \"https://api.whatsapp.com/send?phone=\" + telefone + \"&text=Oi%2C%20quero%20saber%20mais%20sobre%20a%20escola%20de%20jesus%20EX\"\n    }\n\n    window.open(url);\n  };\n\n  const OpenLink = (link) => {\n    window.open(link);\n    //window.open(\"https://www.instagram.com/filosofiaex/\");\n  };\n\n  const [estados, setEstados] = React.useState([{ \"label\": \"Acre\", \"value\": \"AC\" }, { \"label\": \"Alagoas\", \"value\": \"AL\" }, { \"label\": \"Amap\\u00e1\", \"value\": \"AP\" }, { \"label\": \"Amazonas\", \"value\": \"AM\" }, { \"label\": \"Bahia\", \"value\": \"BA\" }, { \"label\": \"Cear\\u00e1\", \"value\": \"CE\" }, { \"label\": \"Distrito Federal\", \"value\": \"DF\" }, { \"label\": \"Esp\\u00edrito Santo\", \"value\": \"ES\" }, { \"label\": \"Goi\\u00e1s\", \"value\": \"GO\" }, { \"label\": \"Maranh\\u00e3o\", \"value\": \"MA\" }, { \"label\": \"Mato Grosso\", \"value\": \"MT\" }, { \"label\": \"Mato Grosso do Sul\", \"value\": \"MS\" }, { \"label\": \"Minas Gerais\", \"value\": \"MG\" }, { \"label\": \"Paran\\u00e1\", \"value\": \"PR\" }, { \"label\": \"Para\\u00edba\", \"value\": \"PB\" }, { \"label\": \"Par\\u00e1\", \"value\": \"PA\" }, { \"label\": \"Pernambuco\", \"value\": \"PE\" }, { \"label\": \"Piau\\u00ed\", \"value\": \"PI\" }, { \"label\": \"Rio Grande do Norte\", \"value\": \"RN\" }, { \"label\": \"Rio Grande do Sul\", \"value\": \"RS\" }, { \"label\": \"Rio de Janeiro\", \"value\": \"RJ\" }, { \"label\": \"Rond\\u00f4nia\", \"value\": \"RO\" }, { \"label\": \"Roraima\", \"value\": \"RR\" }, { \"label\": \"Santa Catarina\", \"value\": \"SC\" }, { \"label\": \"Sergipe\", \"value\": \"SE\" }, { \"label\": \"S\\u00e3o Paulo\", \"value\": \"SP\" }, { \"label\": \"Tocantins\", \"value\": \"TO\" }]);\n  const [estado, setEstado] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = async (event) => {\n    setEstado(event.target.value);\n\n    if (event.target.value === 'todas') {\n      setData(dataFUll)\n    } else {\n      var dataupdate = []\n      await dataFUll.map((data, i) => {\n        if (data.estado === event.target.value) {\n          dataupdate.push(data)\n        }\n        if (dataFUll.length - 1 === i) {\n          setData(dataupdate)\n        }\n      })\n    }\n\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const VerEstrangeiras = () => {\n    var dataupdate = []\n    dataFUll.map((data, i) => {\n      if (data.estado === 'estrangeira') {\n        console.log(data)\n        dataupdate.push(data)\n      }\n      if (dataFUll.length - 1 === i) {\n\n        setData(dataupdate)\n      }\n    })\n  }\n\n  useEffect(() => {\n    Tabletop.init({\n      key: \"1ojdM2qT1OaeHkuhfqBlHrSOLUPiyscwn2wAOhY0j7RM\",\n      simpleSheet: true\n    })\n      .then((data) => {\n        data.splice(0, 4) // removendo quatro primeiros elementos do array\n        data.splice(data.length - 1, 1) // removendo ultimo elemento do array\n\n\n        for (let index = 0; index < data.length; index++) {\n          //console.log(data[index].cidade)\n\n          var retorno = data[index].cidade.split(\",\");\n          var PalavraDepoisUltimaVirgula = retorno[retorno.length - 1];\n\n          if (PalavraDepoisUltimaVirgula.length === 3) {\n            // estado brasileiro\n            data[index].estado = PalavraDepoisUltimaVirgula.trim()\n            data[index].estrangeira = false\n            //console.log(data[index])\n\n          } else {\n            // escola estrangeira\n            data[index].estado = 'estrangeira'\n            data[index].estrangeira = true\n          }\n\n        }\n        setData(data)  // dados que aparecem da view\n        setDataFull(data) // todos os dados para filtragem\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className={classes.header}>\n        < br />\n        <h1>â¡ Escolas de JESUS e Universidade EX</h1>\n        <div>\n\n          <Typography variant=\"body1\" >\n            Filtre por estado:\n                </Typography>\n          <FormControl className={classes.formControl}>\n            <Select\n              labelId=\"demo-controlled-open-select-label\"\n              id=\"demo-controlled-open-select\"\n              open={open}\n              onClose={handleClose}\n              onOpen={handleOpen}\n              value={estado}\n              onChange={handleChange}\n            >\n              <MenuItem value='todas'>Ver todas</MenuItem>\n              {estados.map((data, i) => (\n                <MenuItem key={i} value={data.value}>{data.label}</MenuItem>\n              ))}\n\n            </Select>\n          </FormControl>\n          < br />\n\n          <Button variant=\"contained\" className={classes.formControl}\n            onClick={() => { VerEstrangeiras() }}>Escolas estrangeiras\n                </Button>\n          < br />\n\n          <Typography variant=\"body2\" className={classes.text}>\n            * Se vocÃª perceber que algum professor (a) ou Escola, estÃ¡ falando contra o ideal EX, DENUNCIE para advogadoaovivo@gmail.com\n            </Typography>\n          <Typography variant=\"body2\" className={classes.text}>\n            * Se sua Escola nÃ£o consta aqui, nos envie seu nome, regiÃ£o e Whatsapp\n             <Button className={classes.botao} onClick={() => { OpenLink('https://docs.google.com/spreadsheets/d/1ojdM2qT1OaeHkuhfqBlHrSOLUPiyscwn2wAOhY0j7RM') }}\n              variant=\"outlined\"\n              startIcon={<ListAltIcon />}\n            > Acessar planilha original</Button>\n            </Typography>\n          < br />\n        </div>\n      </div>\n\n      <div className={classes.total}>\n        <p> Mostrando {data.length} contatos</p>\n      </div>\n\n      <CssBaseline />\n      <Container fixed>\n\n        <div className={classes.root}>\n          <Grid container spacing={3}>\n            {data.map((itemm, i) => (\n              <Grid item key={i}>\n                <Fragment key={i}>\n                  <Card className={classes.paper}>\n\n                    <CardHeader\n                      title={itemm.cidade}\n                      subheader={itemm.nome}\n                    />\n\n                    <CardContent>\n                      <RcIf if={itemm.wpp !== 'Fundador e Professor'} >\n                        <RcIf if={itemm.wpp.substring(0, 1) === '('} >\n                          <Button onClick={() => { OpenWpp(itemm.wpp, itemm.estrangeira) }}\n                            variant=\"outlined\"\n                            startIcon={<WhatsAppIcon style={{ color: green[500] }} />}\n                          >{itemm.wpp} Enviar</Button>\n                        </RcIf>\n\n\n                        <RcElse>\n                          <Button onClick={() => { OpenLink('https://www.instagram.com/filosofiaex/') }}\n                            variant=\"outlined\"\n                            startIcon={<InstagramIcon />}\n                          > Instagram</Button>\n\n                        </RcElse>\n                      </RcIf>\n                      <br />\n                      <br />\n                      <RcIf if={itemm.wpp !== 'Fundador e Professor'} >\n                        <Typography variant=\"h6\" className={classes.text}>\n                          Akel sobre:\n                      </Typography>\n                      </RcIf>\n                      <Typography variant=\"body2\" component=\"p\" className={classes.text}>\n                        <RcIf if={itemm.wpp === 'Fundador e Professor'} >\n                          {itemm.sobre + ' '}<a href=\"https://universidadebalneariocamboriu.com/\">ACESSE O SITE </a>\n                          <RcElse>\n                            {itemm.sobre}\n                          </RcElse>\n                        </RcIf>\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Fragment>\n              </Grid>\n            ))}\n\n          </Grid>\n        </div>\n\n      </Container>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}